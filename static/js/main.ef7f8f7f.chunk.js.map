{"version":3,"sources":["components/FileProcessing.js","components/WinList.js","components/LoseList.js","components/GamePlay.js","components/AppHeader.js","App.js","index.js"],"names":["a","dict","shuffleAnswers","array","temp","slice","i","length","j","Math","floor","random","console","log","ListItem","item","class","id","WinList","props","list","winList","className","Card","map","index","key","LoseList","loseList","GamePlay","state","dictionary","isLoaded","answerClicked","answers","rnd","word","answer","answerPair","prevWord","prevAnswer","nextWord","nextAnswer","rndAnswer","WinLose","bind","this","loadUpDictionary","prevProps","prevState","loadDictionary","then","d","setState","RandomNumber","rnd2","Entries","Word","Definition","rndWord","AnswersArray","AnswersPairArray","onClick","NewGame","CardTitle","CardSubtitle","CardText","value","Component","AppHeader","useState","isOpen","setIsOpen","Navbar","color","light","expand","NavbarBrand","href","NavbarToggler","Collapse","navbar","Nav","NavItem","NavLink","App","basename","exact","path","component","gamePlay","appHeader","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ef7f8f7f.chunk.js","sourcesContent":["// import React, { Component } from \"react\";\r\nimport dict from \"../Assets/OxfordJson.json\";\r\n\r\nexport async function loadDictionary() {\r\n  return await dict; //JSON.parse(dict);\r\n}\r\n\r\nexport function RandomNumber() {\r\n  const min = 1;\r\n  const max = dict.length;\r\n  return min + Math.random() * (max - min);\r\n}\r\n//this doesn't work????\r\nexport function shuffleAnswers(array) {\r\n  let temp = array.slice();\r\n  for (let i = temp.length - 1; i > 0; i--) {\r\n    let j = Math.floor(Math.random() * (i + 1));\r\n    [temp[i], temp[j]] = [temp[j], temp[i]];\r\n    console.log(\"shuffleanswers \" + temp[i]);\r\n  }\r\n  return temp;\r\n}\r\n","import React from \"react\";\r\nimport { Card, CardText, CardTitle, CardSubtitle } from \"reactstrap\";\r\n//import { ListItem } from \"@material-ui/core\";\r\n\r\n//https://www.robinwieruch.de/react-list-component\r\n\r\nconst ListItem = ({ item }) => (\r\n  <li class=\"list-group-item list-group-item-primary\">\r\n    <div>\r\n      {item.id} {item}\r\n    </div>\r\n  </li>\r\n);\r\n\r\nconst WinList = props => {\r\n  const list = props.winList;\r\n  return (\r\n    <div className=\"list-group \">\r\n      <Card className=\"cardBodyWinLose\">\r\n        <h5>You have won... {list.length} times</h5>\r\n        {list.map((item, index) => {\r\n          return (\r\n            <ul class=\"list-group list-group-flush\">\r\n              <ListItem key={item.id} item={item} />\r\n            </ul>\r\n          );\r\n        })}\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WinList;\r\n","import React from \"react\";\r\nimport { Card, CardText, CardTitle, CardSubtitle } from \"reactstrap\";\r\n//import { ListItem } from \"@material-ui/core\";\r\n\r\n//https://www.robinwieruch.de/react-list-component\r\n\r\nconst ListItem = ({ item }) => (\r\n  <li class=\"list-group-item list-group-item-primary\">\r\n    <div>\r\n      {item.id} {item}\r\n    </div>\r\n  </li>\r\n);\r\n\r\nconst LoseList = props => {\r\n  const list = props.loseList;\r\n  return (\r\n    <div className=\"list-group\">\r\n      <Card className=\"cardBodyWinLose\">\r\n        <h5>You have lost ... {list.length} times</h5>\r\n        {list.map((item, index) => {\r\n          return (\r\n            <ul class=\"list-group list-group-flush\">\r\n              <ListItem key={item.id} item={item} />\r\n            </ul>\r\n          );\r\n        })}\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoseList;\r\n","import React, { Component } from \"react\";\r\nimport { loadDictionary, shuffleAnswers } from \"./FileProcessing\";\r\nimport { Card, CardText, CardTitle, CardSubtitle } from \"reactstrap\";\r\nimport WinList from \"./WinList\";\r\nimport LoseList from \"./LoseList\";\r\n\r\n//keep this for async ideas with state\r\n//https://stackoverflow.com/questions/58794712/how-to-i-make-setstate-run-synchronously-in-reactjs/58795004#58795004\r\n\r\nclass GamePlay extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      dictionary: [],\r\n      isLoaded: false,\r\n      answerClicked: false,\r\n      answers: [],\r\n      rnd: 0,\r\n      word: \"\",\r\n      answer: \"\",\r\n      answerPair: [],\r\n      prevWord: \"\",\r\n      prevAnswer: \"\",\r\n      nextWord: \"\",\r\n      nextAnswer: \"\",\r\n      rndAnswer: \"\",\r\n      winList: [],\r\n      loseList: []\r\n      //  isExpanded:false\r\n    };\r\n    this.WinLose = this.WinLose.bind(this);\r\n  }\r\n\r\n  //  \"Word\": \"Aardvark\",\r\n  //     \"Definition\": \"n. Mammal with a tubular snout and a long tongue, feeding on termites. [afrikaans]\"\r\n\r\n  componentDidMount() {\r\n    this.loadUpDictionary();\r\n    //this.DictionaryLength();\r\n    //this.RandomNumber();\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (this.state.dictionary !== prevState.dictionary) {\r\n    }\r\n  }\r\n  //The idea is that let the this.loadUpDictionary and this.setState run first, and since setState allows to have callback, you can have this.DictionaryLength() to do just that https://medium.learnreact.com/setstate-takes-a-callback-1f71ad5d2296\r\n  loadUpDictionary() {\r\n    loadDictionary().then(d => {\r\n      this.setState(\r\n        () => ({\r\n          dictionary: d,\r\n          isLoaded: true,\r\n          answerClicked: false\r\n        }),\r\n        () => {\r\n          this.RandomNumber();\r\n        }\r\n      );\r\n      //  console.log(this.state.dictionary);\r\n    });\r\n  }\r\n\r\n  NewGame() {\r\n    this.setState({ answerClicked: false });\r\n    this.RandomNumber();\r\n    console.log(\"rnd \" + this.state.rnd);\r\n  }\r\n\r\n  RandomNumber() {\r\n    const min = 0 + 5; //5 is to stop out of bound errors\r\n    const max = 26731 - 5;\r\n    const rnd = Math.floor(Math.random() * (max - min + 1) + min);\r\n    const rnd2 = Math.floor(Math.random() * (max - min + 1) + min);\r\n\r\n    const word = this.state.dictionary.Entries[rnd].Word;\r\n    const answer = this.state.dictionary.Entries[rnd].Definition;\r\n    const prevWord = this.state.dictionary.Entries[rnd - 1].Word;\r\n    const prevAnswer = this.state.dictionary.Entries[rnd - 1].Definition;\r\n    const nextWord = this.state.dictionary.Entries[rnd + 1].Word;\r\n    const nextAnswer = this.state.dictionary.Entries[rnd + 1].Definition;\r\n    const next2Word = this.state.dictionary.Entries[rnd + 2].Word;\r\n    const next2Answer = this.state.dictionary.Entries[rnd + 2].Definition;\r\n\r\n    const rndWord = this.state.dictionary.Entries[rnd2].Word;\r\n    const rndAnswer = this.state.dictionary.Entries[rnd2].Definition;\r\n\r\n    const AnswersArray = [answer, prevAnswer, nextAnswer, rndAnswer];\r\n\r\n    let q = { word: word, answer: answer };\r\n    let pq = { word: prevWord, answer: prevAnswer };\r\n    let nq = { word: nextWord, answer: nextAnswer };\r\n    let rq = { word: rndWord, answer: rndAnswer };\r\n    let n2q = { word: next2Word, answer: next2Answer }; //not used\r\n    const AnswersPairArray = [q, pq, nq, rq];\r\n\r\n    this.setState(\r\n      () => ({\r\n        rnd: rnd,\r\n        word: word,\r\n        answer: answer,\r\n        prevWord: this.state.dictionary.Entries[rnd - 1].Word,\r\n        prevAnswer: this.state.dictionary.Entries[rnd - 1].Definition,\r\n        nextWord: this.state.dictionary.Entries[rnd + 1].Word,\r\n        nextAnswer: this.state.dictionary.Entries[rnd + 1].Definition,\r\n        rndAnswer: this.state.dictionary.Entries[rnd2].Definition,\r\n        answers: AnswersArray,\r\n        answerPair: shuffleAnswers(AnswersPairArray)\r\n      }),\r\n      () => {\r\n        //  console.log(\"answers[0] =  \" + this.state.answers[0]);\r\n        //  this.shuffleAnswers();\r\n        //   this.setState({ answers: shuffleAnswers(this.state.answers) });\r\n        //  this.shuffleAnswerPair();\r\n      }\r\n    );\r\n  }\r\n\r\n  WinLose(a) {\r\n    this.setState({ answerClicked: true });\r\n\r\n    if (a.answer === this.state.answer) {\r\n      // alert(\"Correct\");\r\n\r\n      this.setState(state => {\r\n        const winList = [...state.winList, state.word]; //spread it, add in word\r\n        return {\r\n          winList //send back new list\r\n        };\r\n      });\r\n\r\n      console.log(\" Win \" + this.state.answer);\r\n    } else {\r\n      console.log(\"Lose \" + this.state.answer);\r\n\r\n      this.setState(state => {\r\n        const loseList = [...state.loseList, state.word]; //spread it, add in word\r\n        return {\r\n          loseList //send back new list\r\n        };\r\n      });\r\n\r\n      //  alert(\"Wrong the answer to your definition is \" + this.state.answer);\r\n    }\r\n\r\n    //   this.state.winList.map(i => console.log(\"winList \" + i.text));\r\n\r\n    //this.NewGame();\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      isLoaded,\r\n      dictionary,\r\n      rnd,\r\n      word,\r\n      nextWord,\r\n      prevWord,\r\n      rndAnswer,\r\n      answers,\r\n      answerPair,\r\n      answerClicked\r\n    } = this.state; //pass across the state\r\n\r\n    if (!isLoaded) {\r\n      return <div>Loading ....</div>;\r\n    } else {\r\n      return (\r\n        <div className=\"container-fluid  justify-content-md-center\">\r\n          <div className=\"row  justify-content-md-center\">\r\n            <div className=\"col  col-sm-auto\">\r\n              <button\r\n                className=\"button btn btn-success btn-lg\"\r\n                onClick={() => this.NewGame()}\r\n              >\r\n                {\"Play - \" + word}\r\n              </button>\r\n\r\n              <div className=\"row\">\r\n                {answerPair.map((a, index) => (\r\n                  <div className=\"col col-12 col-sm-4 col-md-3 \" key={index}>\r\n                    <Card className=\"cardBody\">\r\n                      <CardTitle className=\"conditions \">\r\n                        {!answerClicked ? word : a.word}\r\n                      </CardTitle>\r\n                      {answerClicked ? (\r\n                        <CardSubtitle className=\"cardSubtitle\">\r\n                          {\" \"}\r\n                          {a.word === word ? \"Correct!\" : \"Incorrect\"}\r\n                        </CardSubtitle>\r\n                      ) : (\r\n                        \" \"\r\n                      )}\r\n                      <CardText>{a.answer}</CardText>\r\n\r\n                      <button\r\n                        className=\"buttonSubmit btn btn-primary\"\r\n                        value={a}\r\n                        key={index}\r\n                        onClick={() => this.WinLose(a)}\r\n                      >\r\n                        {!answerClicked ? \"Choose Definition\" : a.word}\r\n                      </button>\r\n                    </Card>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n              <div className=\"row\">\r\n                <div className=\"col-md-auto\">\r\n                  <WinList winList={this.state.winList} />\r\n                </div>\r\n                <div className=\"col-md-auto\">\r\n                  <LoseList loseList={this.state.loseList} />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\nexport default GamePlay;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  UncontrolledDropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem\r\n} from \"reactstrap\";\r\n//https://reactstrap.github.io/components/navbar/\r\nconst AppHeader = props => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const toggle = () => setIsOpen(!isOpen);\r\n\r\n  return (\r\n    <div className=\"container-fluid  justify-content-md-center\">\r\n      <Navbar color=\"rgb(169, 185, 124)\" light expand=\"sm\">\r\n        <NavbarBrand\r\n          className=\"NavbarBrand\"\r\n          href=\"https://visioncollege.ac.nz/\"\r\n        >\r\n          Vision College Home\r\n        </NavbarBrand>\r\n        <NavbarToggler onClick={toggle} />\r\n        <Collapse isOpen={isOpen} navbar>\r\n          <Nav className=\"ml-auto\" navbar>\r\n            <NavItem>\r\n              <NavLink href=\"https://visioncollege.ac.nz/study/information-technology/\">\r\n                Information Technology Courses\r\n              </NavLink>\r\n            </NavItem>\r\n            {/* <NavItem>\r\n              <NavLink href=\"https://github.com/reactstrap/reactstrap\">\r\n                GitHub\r\n              </NavLink>\r\n            </NavItem> */}\r\n            {/* <UncontrolledDropdown nav inNavbar>\r\n              <DropdownToggle nav caret>\r\n                Options\r\n              </DropdownToggle>\r\n              <DropdownMenu right>\r\n                <DropdownItem>Option 1</DropdownItem>\r\n                <DropdownItem>Option 2</DropdownItem>\r\n                <DropdownItem divider />\r\n                <DropdownItem>Reset</DropdownItem>\r\n              </DropdownMenu>\r\n            </UncontrolledDropdown> */}\r\n          </Nav>\r\n        </Collapse>\r\n      </Navbar>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AppHeader;\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport gamePlay from \"./components/GamePlay\";\nimport winList from \"./components/WinList\";\nimport loseList from \"./components/LoseList\";\nimport appHeader from \"./components/AppHeader\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\n//https://levelup.gitconnected.com/deploying-a-create-react-app-with-routing-to-github-pages-f386b6ce84c2\nfunction App() {\n  return (\n    <HashRouter basename=\"/\">\n      <div className=\"container-fluid\">\n        <Switch>\n          <Route exact path=\"/\" component={gamePlay} />\n          <Route component={winList} />\n          <Route component={loseList} />\n          <Route component={appHeader} />\n        </Switch>\n      </div>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport App from \"./App\";\nimport AppHeader from \"./components/AppHeader\";\n\nReactDOM.render(\n  <Router>\n    <AppHeader />\n    <App />\n  </Router>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}